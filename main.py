import modulos.functions as mf
from sklearn import tree 
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

df = mf.treat_csv()

# train = df[(df['Date'].dt.year >= 2023) & (df['Date'].dt.year <= 2024)]
train = df[(df['Date'].dt.year <= 2024)]
test = df[(df['Date'].dt.year == 2025)]

# print("Per√≠odo de treino:", train['Date'].min(), "->", train['Date'].max())
# print("Per√≠odo de teste:", test['Date'].min(), "->", test['Date'].max())

# TREINAMENTO

# Features e Targets dos dataframes
features = ['Open', 'High', 'Low', 'Close', 'Volume']
target = 'Target'

# Treino
X_train = train[features] # features
y_train = train[target] # target

# Teste 
x_test = test[features]
y_teste = test[target]

def DesionTree():
    clf = tree.DecisionTreeClassifier()
    clf = clf.fit(X_train, y_train)

    y_pred = clf.predict(x_test)

    print("Acur√°cia:", accuracy_score(y_teste, y_pred))
    print("\nRelat√≥rio de Classifica√ß√£o:\n", classification_report(y_teste, y_pred))
    print("\nMatriz de Confus√£o:\n", confusion_matrix(y_teste, y_pred))





















# üëç1) Escolher um c√≥digo de ativo da B3 e Baixar 3 anos (2023, 2024 e 2025) de
# dados de cota√ß√£o hist√≥rica do ativo escolhido de granularidade (per√≠odo) di√°ria.


# üëç2) Para o per√≠odo selecionado, calcular o atributo alvo atrav√©s da diferen√ßa entre o Pe√ßo de Abertura e o Pre√ßo de Fechamento. Caso o resultado seja positivo o novo atributo alvo ter√° o valor de 1. E caso o contr√°rio, o novo atributo alvo ter√° o valor de 0.

# üëç3) Separar os dados em Treinamento (2023 e 2024) e Teste (2025)

# 4) Escolher na biblioteca sci-kit learn e implementar um algoritmo de aprendizado de m√°quina categoria supervisionado (classificador) (KNN, DT, NB, SVM e outro).

# 5) Realizar as simula√ß√µes e ajustar os par√¢metros do algoritmo escolhido aos
# dados avaliados.

# 6) Revisar os dados coletados com o objetivo de retirar ru√≠dos e ou atributos
# irrelevantes e, em seguida, proponha uma nova forma de treinar os dados para
# o algoritmo de aprendizado de m√°quina escolhido e, realize novas simula√ß√µes.

# 7) Gerar um relat√≥rio em formato (.PDF) contendo no m√≠nimo:
    # o Resumo e imagem do fluxo de todas as etapas realizadas
    # o explica√ß√£o das etapas realizadas (O que foi feito? Como foi feito?)
    # o gr√°fico de linha da s√©rie temporal total avaliada
    # o gr√°fico de barras contendo a percentual das classes calculadas
    # o quantitativo em percentual das classes calculadas
    # o quantidade de acertos e erros de previs√£o
    # o medidas de avalia√ß√£o (acur√°cia, precisao, f1-score e especificidade)
    # o retorno financeiro das perdas em percentual
    # o retorno financeiro dos ganhos em percentual
    # o retorno financeiro geral (ganhos menos as perdas) em percentual
    # o conclus√£o sobre os resultados apresentados e o comportamento apresentado pelo seu algoritmo de aprendizado de m√°quina escolhido.

# 8) Criar um Dashboard para iniciar a aplica√ß√£o e apresenta√ß√£o dos resultados
# solicitados no item 7.

# 9) Criar um filtro para selecionar o per√≠odo de dados de Treinamento por ano.

# 10) Gravar um v√≠deo de no m√°ximo 10 minutos mostrando c√≥digo funcionando e
# explicando todo o trabalho realizado
    # O que dever√° ser enviado?
    # ÔÇß relat√≥rio em formato (.PDF)
    # ÔÇß c√≥digo implementado
    # ÔÇß v√≠deo explicativo
    # ÔÇß arquivo de cota√ß√µes hist√≥rica (treinamento e Teste) utilizados